coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
MR_res_sig_MCP
## Separate df based on outcome for plotting
MR_res_sig_MDD <- MR_res_sig[grep("MDD$", MR_res_sig$analysis),]
## Remove MDD <-> MCP analysis
MR_res_sig_MDD <- MR_res_sig_MDD[(!grepl("MCP -> MDD", MR_res_sig_MDD$analysis)),]
## Order results by beta values
MR_res_sig_MDD$analysis <- reorder(MR_res_sig_MDD$analysis, -MR_res_sig_MDD$b)
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method, shape = `Statistically Significant`)) +
geom_point(size=2, aes(colour = factor(method))) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
MR_res_sig_MDD
plot_MDD
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank())
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(size = "none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(size = "none", `Statistically Significant` = "none")
(plotly_MDD <- ggplotly(plot_MDD))
ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
View(MR_res)
View(MR_intercept)
plot_MDD
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("MCP$", MR_res_sig$analysis),]
## Remove MCP <-> MCP analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MDD -> MCP", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP
## Separate df based on outcome for plotting
MR_res_sig_MDD <- MR_res_sig[grep("^MDD", MR_res_sig$analysis),]
## Remove MDD <-> MCP analysis
MR_res_sig_MDD <- MR_res_sig_MDD[(!grepl("MDD -> MCP", MR_res_sig_MDD$analysis)),]
## Order results by beta values
MR_res_sig_MDD$analysis <- reorder(MR_res_sig_MDD$analysis, -MR_res_sig_MDD$b)
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("^MCP", MR_res_sig$analysis),]
## Remove MCP <-> MDD analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MCP -> MDD", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Statistically Significant`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP
ifelse(MR_res$pval < 0.05, "Yes","No")
ifelse(MR_res$pval < 0.05, "Yes","No")
# Include yes/no column to determine shape based on p-value
MR_res$`Significance` <- if(MR_res$pval < 0.05, "Nominally Significant")
# Include yes/no column to determine shape based on p-value
MR_res$Significance <- NA
MR_res[MR_res$pval < 0.05, "Significance"]
MR_res[MR_res$pval < 0.05, "Significance"] <- `Nominally Significant`
MR_res[MR_res$pval > 0.05, "Significance"] <- `Not Significant`
MR_res[MR_res$p.adjust < 0.05, "Significance"] <- `Statistically Significant`
# Include yes/no column to determine shape based on p-value
MR_res$Significance <- NA
MR_res[MR_res$pval < 0.05, "Significance"] <- "Nominally Significant"
MR_res[MR_res$pval > 0.05, "Significance"] <- "Not Significant"
MR_res[MR_res$p.adjust < 0.05, "Significance"] <- "Statistically Significant"
MR_res
p.adjust.new <- function (p, method = p.adjust.methods, n = length(p))
{
method <- match.arg(method)
if (method == "fdr")
method <- "BH"
nm <- names(p)
p <- as.numeric(p)
p0 <- setNames(p, nm)
if (all(nna <- !is.na(p)))
nna <- TRUE
else p <- p[nna]
lp <- length(p)
#stopifnot(n >= lp)
if (n <= 1)
return(p0)
if (n == 2 && method == "hommel")
method <- "hochberg"
p0[nna] <- switch(method, bonferroni = pmin(1, n * p), holm = {
i <- seq_len(lp)
o <- order(p)
ro <- order(o)
pmin(1, cummax((n + 1L - i) * p[o]))[ro]
}, hommel = {
if (n > lp) p <- c(p, rep.int(1, n - lp))
i <- seq_len(n)
o <- order(p)
p <- p[o]
ro <- order(o)
q <- pa <- rep.int(min(n * p/i), n)
for (j in (n - 1L):2L) {
ij <- seq_len(n - j + 1L)
i2 <- (n - j + 2L):n
q1 <- min(j * p[i2]/(2L:j))
q[ij] <- pmin(j * p[ij], q1)
q[i2] <- q[n - j + 1L]
pa <- pmax(pa, q)
}
pmax(pa, p)[if (lp < n) ro[1L:lp] else ro]
}, hochberg = {
i <- lp:1L
o <- order(p, decreasing = TRUE)
ro <- order(o)
pmin(1, cummin((n + 1L - i) * p[o]))[ro]
}, BH = {
i <- lp:1L
o <- order(p, decreasing = TRUE)
ro <- order(o)
pmin(1, cummin(n/i * p[o]))[ro]
}, BY = {
i <- lp:1L
o <- order(p, decreasing = TRUE)
ro <- order(o)
q <- sum(1/(1L:n))
pmin(1, cummin(q * n/i * p[o]))[ro]
}, none = p)
p0
}
MR_res$p.adjust <- NA
MR_res[MR_res$method == "Inverse variance weighted", "p.adjust"] <- p.adjust.new(MR_res[MR_res$method == "Inverse variance weighted", "pval"], n = (nrow(MR_res)/4), method = "fdr")
MR_res[MR_res$method == "Robust adjusted profile score (RAPS)", "p.adjust"] <- p.adjust.new(MR_res[MR_res$method == "Robust adjusted profile score (RAPS)", "pval"], n = (nrow(MR_res)/4), method = "fdr")
MR_res[MR_res$method %in% c("MR Egger", "MR Egger (Simex Correction)"), "p.adjust"] <- p.adjust.new(MR_res[MR_res$method %in% c("MR Egger", "MR Egger (Simex Correction)"), "pval"], n = (nrow(MR_res)/4), method = "fdr")
MR_res[MR_res$method == "Weighted median", "p.adjust"] <- p.adjust.new(MR_res[MR_res$method == "Weighted median", "pval"], n = (nrow(MR_res)/4), method = "fdr")
# Include yes/no column to determine shape based on p-value
MR_res$Significance <- NA
MR_res[MR_res$pval < 0.05, "Significance"] <- "Nominally Significant"
MR_res[MR_res$pval > 0.05, "Significance"] <- "Not Significant"
MR_res[MR_res$p.adjust < 0.05, "Significance"] <- "Statistically Significant"
## Get resutls where both IVW and MR Egger were nominally significant
MR_res_sig_analyses_IVW <-  unique(MR_res$analysis[(MR_res$method == "Inverse variance weighted" & MR_res$pval < 0.05)])
MR_res_sig_analyses_RAPs <-  unique(MR_res$analysis[(MR_res$method == "Robust adjusted profile score (RAPS)" & MR_res$pval < 0.05)])
MR_res_sig_analyses <- intersect(MR_res_sig_analyses_IVW, MR_res_sig_analyses_RAPs)
MR_res_sig <- MR_res[MR_res$analysis %in% MR_res_sig_analyses,]
## Separate df based on outcome for plotting
MR_res_sig_MDD <- MR_res_sig[grep("MDD$", MR_res_sig$analysis),]
## Remove MDD <-> MCP analysis
MR_res_sig_MDD <- MR_res_sig_MDD[(!grepl("MCP -> MDD", MR_res_sig_MDD$analysis)),]
## Order results by beta values
MR_res_sig_MDD$analysis <- reorder(MR_res_sig_MDD$analysis, -MR_res_sig_MDD$b)
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("MCP$", MR_res_sig$analysis),]
## Remove MCP <-> MCP analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MDD -> MCP", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
View(MR_res)
MR_res_sig_MCP
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(16, 15, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(16, 16, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(15, 16, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(15, 16, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
plot_MCP
plot_MCP
ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(15, 16, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
ggplot(MR_res_sig_MCP, aes(x = method,y = b)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`))
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b, shape = `Significance`)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values=c(15, 16, 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MCP
## Separate df based on outcome for plotting
MR_res_sig_MDD <- MR_res_sig[grep("^MDD", MR_res_sig$analysis),]
## Remove MDD <-> MCP analysis
MR_res_sig_MDD <- MR_res_sig_MDD[(!grepl("MDD -> MCP", MR_res_sig_MDD$analysis)),]
## Order results by beta values
MR_res_sig_MDD$analysis <- reorder(MR_res_sig_MDD$analysis, -MR_res_sig_MDD$b)
MR_res_sig_MDD$Significance
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17, `Not Significant` = 16, `Satistically Significant`  = 6))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17, `Not Significant` = 16, `Satistically Significant` = 15))
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Satistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 15,`Not Significant`= 16,`Satistically Significant` = 17)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Satistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Satistically Significant` = 15))
MR_res_sig_MDD
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("MCP$", MR_res_sig$analysis),]
## Remove MCP <-> MCP analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MDD -> MCP", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Satistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
MR_res_sig_MCP$Significance
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("MCP$", MR_res_sig$analysis),]
## Remove MCP <-> MCP analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MDD -> MCP", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = `Significance`)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Statistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
## Separate df based on outcome for plotting
MR_res_sig_MDD <- MR_res_sig[grep("^MDD", MR_res_sig$analysis),]
## Remove MDD <-> MCP analysis
MR_res_sig_MDD <- MR_res_sig_MDD[(!grepl("MDD -> MCP", MR_res_sig_MDD$analysis)),]
## Order results by beta values
MR_res_sig_MDD$analysis <- reorder(MR_res_sig_MDD$analysis, -MR_res_sig_MDD$b)
plot_MDD <- ggplot(MR_res_sig_MDD, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MDD, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Statistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MDD$Upper, MR_res_sig_MDD$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MDD <- ggplotly(plot_MDD))
## Separate df based on outcome for plotting
MR_res_sig_MCP <- MR_res_sig[grep("^MCP", MR_res_sig$analysis),]
## Remove MCP <-> MDD analysis
MR_res_sig_MCP <- MR_res_sig_MCP[(!grepl("MCP -> MDD", MR_res_sig_MCP$analysis)),]
## Order results by beta values
MR_res_sig_MCP$analysis <- reorder(MR_res_sig_MCP$analysis, -MR_res_sig_MCP$b)
plot_MCP <- ggplot(MR_res_sig_MCP, aes(x = method,y = b, shape = Significance)) +
geom_pointrange(data=MR_res_sig_MCP, aes(x = method,y = b, ymin = Lower, ymax = Upper, col = method)) +
geom_point(size=2, aes(colour = factor(method), shape = Significance)) +
scale_shape_manual(values = c(`Nominally Significant` = 17,`Not Significant`= 16,`Statistically Significant` = 15)) +
scale_y_continuous(limits = symmetric_limits(max(abs(c(MR_res_sig_MCP$Upper, MR_res_sig_MCP$Lower))))) +
xlab("") + ylab("") +
facet_wrap(~analysis,strip.position="top",nrow=86,scales = "free_y") +
coord_flip() +
scale_color_manual(values=c("cyan4", "darkgoldenrod1", "darkorange2", "chartreuse4", "darkslateblue")) +
theme_minimal() +
theme(axis.text.y = element_blank(), legend.position="none")
(plotly_MCP <- ggplotly(plot_MCP))
