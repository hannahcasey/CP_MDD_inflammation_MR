library(LDlinkR)
library(ieugwasr)
#install.packages("Rfast")
library(Rfast)
library(patchwork)
library(ggplot2)
#install.packages("ggplotify")
library(ggplotify)
set.seed(151097)
## Read in harmonised summary statistics - limited to 500kb +/- CD40 transcipt region
MCP <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', header = T)
MDD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', header = T)
CD40 <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/sCD40_harmonised.tsv', header = T)
## Load LD matric and SNP list
LD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/LD_matrix.ld')
LD_snps <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/LD_matrix.snplist')
## find duplicates in SNP list
LD_no_dup <- LD[-which(duplicated(LD_snps$V1)), -which(duplicated(LD_snps$V1))]
LD_snps_no_dup <- LD_snps$V1[-which(duplicated(LD_snps$V1))]
colnames(LD_no_dup) <- LD_snps_no_dup
rownames(LD_no_dup) <- LD_snps_no_dup
## Get LD matrices for each GWAS
LD_MCP <- LD_no_dup[colnames(LD_no_dup) %in% MCP$id,]
LD_MCP <- LD_MCP[,colnames(LD_no_dup) %in% MCP$id]
LD_MDD <- LD_no_dup[colnames(LD_no_dup) %in% MDD$id,]
LD_MDD <- LD_MDD[,colnames(LD_no_dup) %in% MDD$id]
LD_CD40 <- LD_no_dup[colnames(LD_no_dup) %in% CD40$id,]
LD_CD40 <- LD_CD40[,colnames(LD_no_dup) %in% CD40$id]
## Plot CD40 region
CD40_small <- CD40[CD40$id %in% colnames(LD_CD40),]
assoc_plot((CD40_small %>% dplyr::select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker="rs6074022")
MDD_small <- MDD[MDD$id %in% colnames(LD_MDD),]
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
MCP_small <- MCP[MCP$id %in% colnames(LD_MCP),]
assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MCP)
## Evident from locus that mutlliple independent signals should be considered
## get MAF
CD40_small$freq <- as.numeric(CD40_small$freq)
CD40_small$MAF <- ifelse(CD40_small$freq > 0.5, 1-CD40_small$freq, CD40_small$freq)
MDD_small$freq <- as.numeric(MDD_small$freq)
MDD_small$MAF <- ifelse(MDD_small$freq > 0.5, 1-MDD_small$freq, MDD_small$freq)
MCP_small$freq <- as.numeric(MCP_small$freq)
MCP_small$MAF <- ifelse(MCP_small$freq > 0.5, 1-MCP_small$freq, MCP_small$freq)
## remove rows with NA
CD40_small <- na.omit(CD40_small)
MDD_small <- na.omit(MDD_small)
MCP_small <- na.omit(MCP_small)
## make list
exposure_list <- list("pvalues" = CD40_small$pvalue, "beta" = CD40_small$beta, "varbeta" = CD40_small$varbeta, "N" = 21758, "type" = "quant", "MAF" = CD40_small$MAF, "LD" = as.matrix(LD_CD40), "snp" = CD40_small$id, "position" = CD40_small$pos, "sdY" = 1)
outcome_MDD_list <- list("pvalues" = MDD_small$pvalue, "beta" = MDD_small$beta, "varbeta" = MDD_small$varbeta, "N" = 3583863, "type" = "quant", "MAF" = MDD_small$MAF, "LD" = as.matrix(LD_MDD), "snp" = MDD_small$id, "position" = MDD_small$pos, "sdY" = 1)
outcome_MCP_list <- list("pvalues" = MCP_small$pvalue, "beta" = MCP_small$beta, "varbeta" = MCP_small$varbeta, "N" = 440780, "type" = "quant", "MAF" = MCP_small$MAF, "LD" = as.matrix(LD_MCP), "snp" = MCP_small$id, "position" = MCP_small$pos, "sdY" = 1)
str(exposure_list)
str(outcome_MDD_list)
str(outcome_MCP_list)
check_dataset(exposure_list)
check_dataset(outcome_MDD_list)
check_dataset(outcome_MCP_list)
plot_dataset(exposure_list)
plot_dataset(outcome_MDD_list)
plot_dataset(outcome_MCP_list)
## standard coloc (single causal variant)
my.res <- coloc.abf(dataset1=exposure_list, dataset2=outcome_MDD_list)
sensitivity(my.res,"H4 > 0.9")
my.res <- coloc.abf(dataset1=exposure_list, dataset2=outcome_MCP_list)
sensitivity(my.res,"H4 > 0.9")
## finemap
finemap.signals(exposure_list,method="cond")
finemap.signals(outcome_MDD_list,method="cond")
finemap.signals(outcome_MCP_list,method="cond")
check_dataset(exposure_list,req="LD")
check_dataset(outcome_MDD_list,req="LD")
check_dataset(outcome_MCP_list,req="LD")
S_outcome_MDD_list <- runsusie(outcome_MDD_list, n = 3583863, max_causal = 10, max_iter = 1000)
summary(S_outcome_MDD_list)
S_outcome_MCP_list <- runsusie(outcome_MCP_list, n = 440780, max_causal = 10, max_iter = 1000)
summary(S_outcome_MCP_list)
S_exposure_list <- runsusie(exposure_list, n = 21758, max_causal = 10, max_iter = 1000)
summary(S_exposure_list)
## Save susie output
save(S_outcome_MDD_list, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MDD_list.Rdata")
save(S_outcome_MCP_list, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MCP_list.Rdata")
save(S_exposure_list,file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_exposure_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MDD_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MCP_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_exposure_list.Rdata")
## Colocalise CD40 and MCP
res_susie_CD40_MCP <- if(requireNamespace("susieR",quietly=TRUE)) {
susie_MCP_res=coloc.susie(S_outcome_MCP_list,S_exposure_list)
print(susie_MCP_res$summary)
}
for (i in 1:nrow(susie_MCP_res$summary)){
if(requireNamespace("susieR",quietly=TRUE)) {
sensitivity(susie_MCP_res,"H4 > 0.9",row=i,dataset1=outcome_MCP_list,dataset2=exposure_list)
}
}
## Colocalise CD40 and MDD
res_susie_CD40_MDD <- if(requireNamespace("susieR",quietly=TRUE)) {
susie_MDD_res=coloc.susie(S_outcome_MDD_list,S_exposure_list)
print(susie_MDD_res$summary)
}
## Sensitivity analysis
for (i in 1:nrow(susie_MDD_res$summary)){
if(requireNamespace("susieR",quietly=TRUE)) {
sensitivity(susie_MDD_res,"H4 > 0.9",row=i,dataset1=outcome_MDD_list,dataset2=exposure_list)
}
}
## Plot colocalised SNPs
for(i in 1:nrow(susie_MDD_res$summary)){
snp1 <- susie_MDD_res$summary$hit1[i]
snp2 <- susie_MDD_res$summary$hit2[i]
p1 <- as.ggplot(assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_MDD, top.marker=snp1))
p2 <- as.ggplot(assoc_plot((CD40_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker=snp2))
assign(paste0("CD40_MDD_", i), p1/p2)
}
for(i in 1:nrow(susie_MCP_res$summary)){
snp1 <- susie_MCP_res$summary$hit1[i]
snp2 <- susie_MCP_res$summary$hit2[i]
p1 <- as.ggplot(assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_MCP, top.marker=snp1))
p2 <- as.ggplot(assoc_plot((CD40_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker=snp2))
assign(paste0("CD40_MCP_", i), p1/p2)
}
## Save results
save(susie_MDD_res, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MDD_res.Rdata")
write.csv(susie_MDD_res$summary, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MDD_res.csv")
save(susie_MCP_res, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MCP_res.Rdata")
write.csv(susie_MCP_res$summary, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MCP_res.csv")
plots <- ls(patter = "CD40_MDD_|CD40_MCP_")
for (i in plots){
png(paste0("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/locuszoom/",i, ".jpg"), height = 1000)
print(get(i))
dev.off()
}
## plot LD matrix between causal SNPs
install.packages("LDheatmap")
#install.packages("LDheatmap")
library(LDheatmap)
## plot LD matrix between causal SNPs
LDheatmap(LD_CD40)
LD_CD40
data("CEUSNP")
CEUSNP
## plot LD matrix between causal SNPs
susie_MCP_res$summary
## plot LD matrix between causal SNPs
unique(susie_MCP_res$summary$hit1)
unique(susie_MCP_res$summary$hit1)
LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]
## plot LD matrix between causal SNPs
heatmap(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)])
## plot LD matrix between causal SNPs
heatmap(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)])
## plot LD matrix between causal SNPs
plot(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
dev.off()
## plot LD matrix between causal SNPs
plot(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
## plot LD matrix between causal SNPs
heatmap(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
LD_MCP
View(LD_MDD)
## plot LD matrix between causal SNPs
heatmap(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]
LD_CD40[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]
## plot LD matrix between causal SNPs
corrplot::corrplot(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
LD_CD40[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]
unique(susie_MCP_res$summary$hit1)
library(coloc)
library(dplyr)
library(curl)
library(devtools)
#install_github("jrs95/gassocplot")
library(gassocplot)
#install.packages("LDlinkR")
library(LDlinkR)
library(ieugwasr)
#install.packages("Rfast")
library(Rfast)
library(patchwork)
library(ggplot2)
#install.packages("ggplotify")
library(ggplotify)
#install.packages("LDheatmap")
library(LDheatmap)
set.seed(151097)
## Read in harmonised summary statistics - limited to 500kb +/- CD40 transcipt region
MCP <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', header = T)
MDD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', header = T)
CD40 <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/sCD40_harmonised.tsv', header = T)
LD
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
MCP_small <- MCP[MCP$id %in% colnames(LD_MCP),]
assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MCP)
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
MDD_small <- MDD[MDD$id %in% colnames(LD_MDD),]
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
#install.packages("snpsettest")
library(snpsettest)
library(dplyr)
## Load in exposure - TNFRSF5
exposure_CD40 <- read.table("~/Desktop/PhD/resources/summary_statistics/raw_data/olink_CVD/TNFRSF5.txt", header = TRUE)
## Load in outcome - MDD
outcome_MDD <-  read.table("~/Desktop/PhD/resources/summary_statistics/processed_data/MDD.txt", header = TRUE)
## Load in outcome - MCP
outcome_MCP <-  read.table("~/Desktop/PhD/resources/summary_statistics/raw_data/ChronicPain.stats", header = TRUE)
## Get SNPs within 500kb of CD40 gene
## Get cis region of exposure protein
## Chromosome 20
bp_range = (46118316 - 500000):(46129863  + 500000)
## Get SNPs in cis region in exposure and outcome GWAS
CD40_snps <- exposure_CD40$hm_rsid[(exposure_CD40$hm_chrom == 20 & exposure_CD40$hm_pos %in% bp_range)]
## Get SNPs in in both exposure and outcome GWAS
MDD_snps <- CD40_snps[CD40_snps %in% outcome_MDD$ID]
MCP_snps <- CD40_snps[CD40_snps %in% outcome_MCP$SNP]
## Change column names for consistency and limit to CD40 snps
exposure_sCD40_QC <- exposure_CD40 %>%
filter(hm_rsid  %in% CD40_snps) %>%
dplyr::select(hm_rsid, hm_other_allele, hm_effect_allele, hm_effect_allele_frequency, hm_beta, standard_error, p_value, n) %>%
dplyr::rename(id = hm_rsid,
beta = hm_beta,
freq = hm_effect_allele_frequency,
pvalue = p_value,
A1 = hm_effect_allele,
A2 = hm_other_allele) %>%
mutate(varbeta = standard_error^2, zscore = beta/standard_error)
## Calculate allele frequency
outcome_MDD_QC <- outcome_MDD %>%
filter(ID  %in% MDD_snps) %>%
dplyr::select(ID, A1, A2, freq, BETA, SE, PVAL, CHROM, POS) %>%
dplyr::rename(id = ID,
beta = BETA,
pvalue = PVAL,
chr = CHROM,
pos = POS) %>%
mutate(varbeta = SE^2, zscore = beta/SE)
outcome_MCP_QC <- outcome_MCP %>%
filter(SNP  %in% MCP_snps) %>%
dplyr::select(SNP, ALLELE1, ALLELE0, A1FREQ, BETA, SE, P, CHR, BP) %>%
dplyr::rename(id = SNP,
beta = BETA,
freq = A1FREQ,
pvalue =P,
A1 = ALLELE1,
A2 = ALLELE0,
chr = CHR,
pos = BP) %>%
mutate(varbeta = SE^2, zscore = beta/SE)
## combine SNP, chr and bp columns of MDD and MCP to apply to SNPs in CD40
outcome_snp_info <- rbind(outcome_MCP_QC[,c("id", "chr", "pos")], outcome_MDD_QC[,c("id", "chr", "pos")])
## Remove duplicates
outcome_snp_info <- outcome_snp_info %>%
filter(duplicated(id) == FALSE)
## Add pos and chr to CD40 (hg18)
exposure_sCD40_QC <- inner_join(exposure_sCD40_QC, outcome_snp_info[,c("id", "chr", "pos")], by = "id")
## Remove rows with missing data
outcome_MDD_QC <- na.omit(outcome_MDD_QC)
outcome_MCP_QC <- na.omit(outcome_MCP_QC)
exposure_sCD40_QC <- na.omit(exposure_sCD40_QC)
## Remove duplicated SNPs - keep first instance
outcome_MDD_QC <- outcome_MDD_QC %>%
filter(duplicated(id) == FALSE)
outcome_MCP_QC <- outcome_MCP_QC %>%
filter(duplicated(id) == FALSE)
exposure_sCD40_QC <- exposure_sCD40_QC %>%
filter(duplicated(id) == FALSE)
## Load in BED reference file
x <- read_reference_bed("~/Desktop/PhD/resources/LD_reference/all_phase3.bed", verbose = FALSE)
## Harmonise MDD sumstats
hsumstats_MDD <- harmonize_sumstats(outcome_MDD_QC, x, return_indice = F, check_strand_flip = TRUE)
temp <- left_join(hsumstats_MDD, outcome_MDD_QC, by = "id")
flipped_rsids_MDD <- temp$id[temp$A1.x != temp$A1.y]
## reverse beta and frequency for flipped alleles
outcome_MDD_QC_harmonised <- outcome_MDD_QC[outcome_MDD_QC$id %in% hsumstats_MDD$id,]
outcome_MDD_QC_harmonised[outcome_MDD_QC$id %in% flipped_rsids_MDD, "beta"] <- outcome_MDD_QC[outcome_MDD_QC$id %in% flipped_rsids_MDD, "beta"] * -1
outcome_MDD_QC_harmonised[outcome_MDD_QC$id %in% flipped_rsids_MDD, "zscore"] <- outcome_MDD_QC[outcome_MDD_QC$id %in% flipped_rsids_MDD, "zscore"] * -1
outcome_MDD_QC_harmonised[outcome_MDD_QC$id %in% flipped_rsids_MDD, "freq"] <- 1 - outcome_MDD_QC[outcome_MDD_QC$id %in% flipped_rsids_MDD, "freq"]
outcome_MDD_QC_harmonised[outcome_MDD_QC$id %in% flipped_rsids_MDD, "A1"] <- outcome_MDD_QC[outcome_MDD_QC$id %in% flipped_rsids_MDD, "A2"]
outcome_MDD_QC_harmonised[outcome_MDD_QC$id %in% flipped_rsids_MDD, "A2"] <- outcome_MDD_QC[outcome_MDD_QC$id %in% flipped_rsids_MDD, "A1"]
## Harmonise MCP sumstats
hsumstats_MCP <- harmonize_sumstats(outcome_MCP_QC, x, return_indice = F, check_strand_flip = TRUE)
temp <- inner_join(hsumstats_MCP, outcome_MCP_QC, by = "id")
flipped_rsids_MCP <- temp$id[temp$A1.x != temp$A1.y]
## reverse beta and frequency for flipped alleles
outcome_MCP_QC_harmonised <- outcome_MCP_QC[outcome_MCP_QC$id %in% hsumstats_MCP$id,]
outcome_MCP_QC_harmonised[, "beta"] <- outcome_MCP_QC[outcome_MCP_QC$id %in% flipped_rsids_MCP, "beta"] * -1
outcome_MCP_QC_harmonised[, "zscore"] <- outcome_MCP_QC[outcome_MCP_QC$id %in% flipped_rsids_MCP, "zscore"] * -1
outcome_MCP_QC_harmonised[, "freq"] <- 1 - outcome_MCP_QC[outcome_MCP_QC$id %in% flipped_rsids_MCP, "freq"]
outcome_MCP_QC_harmonised[, "A1"] <- outcome_MCP_QC[outcome_MCP_QC$id %in% flipped_rsids_MCP, "A2"]
outcome_MCP_QC_harmonised[, "A2"] <- outcome_MCP_QC[outcome_MCP_QC$id %in% flipped_rsids_MCP, "A1"]
## Harmonise sCD40 sumstats
hsumstats_sCD40 <- harmonize_sumstats(exposure_sCD40_QC, x, return_indice = F, check_strand_flip = TRUE)
temp <- left_join(hsumstats_sCD40, exposure_sCD40_QC, by = "id")
flipped_rsids_sCD40 <- temp$id[temp$A1.x != temp$A1.y]
## No SNPs needing harmonization!
## Save harmonised sumstats
write.table(outcome_MDD_QC_harmonised, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', sep = '\t', row.names = F, quote = F)
write.table(outcome_MCP_QC_harmonised, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', sep = '\t', row.names = F, quote = F)
write.table(exposure_sCD40_QC, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/sCD40_harmonised.tsv', sep = '\t', row.names = F, quote = F)
write.table(outcome_MCP_QC_harmonised, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', sep = '\t', row.names = F, quote = F)
library(coloc)
library(dplyr)
library(curl)
library(devtools)
#install_github("jrs95/gassocplot")
library(gassocplot)
#install.packages("LDlinkR")
library(LDlinkR)
library(ieugwasr)
#install.packages("Rfast")
library(Rfast)
library(patchwork)
library(ggplot2)
#install.packages("ggplotify")
library(ggplotify)
#install.packages("LDheatmap")
library(LDheatmap)
set.seed(151097)
## Read in harmonised summary statistics - limited to 500kb +/- CD40 transcipt region
MCP <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', header = T)
MDD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', header = T)
CD40 <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/sCD40_harmonised.tsv', header = T)
## Load LD matric and SNP list
LD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/LD_matrix.ld')
LD_snps <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/LD_matrix.snplist')
## find duplicates in SNP list
LD_no_dup <- LD[-which(duplicated(LD_snps$V1)), -which(duplicated(LD_snps$V1))]
LD_snps_no_dup <- LD_snps$V1[-which(duplicated(LD_snps$V1))]
colnames(LD_no_dup) <- LD_snps_no_dup
rownames(LD_no_dup) <- LD_snps_no_dup
## Get LD matrices for each GWAS
LD_MCP <- LD_no_dup[colnames(LD_no_dup) %in% MCP$id,]
LD_MCP <- LD_MCP[,colnames(LD_no_dup) %in% MCP$id]
LD_MDD <- LD_no_dup[colnames(LD_no_dup) %in% MDD$id,]
LD_MDD <- LD_MDD[,colnames(LD_no_dup) %in% MDD$id]
LD_CD40 <- LD_no_dup[colnames(LD_no_dup) %in% CD40$id,]
LD_CD40 <- LD_CD40[,colnames(LD_no_dup) %in% CD40$id]
## Plot CD40 region
CD40_small <- CD40[CD40$id %in% colnames(LD_CD40),]
assoc_plot((CD40_small %>% dplyr::select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker="rs6074022")
MDD_small <- MDD[MDD$id %in% colnames(LD_MDD),]
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
MCP_small <- MCP[MCP$id %in% colnames(LD_MCP),]
assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MCP)
## Evident from locus that mutlliple independent signals should be considered
outcome_MDD_QC_harmonised
outcome_MCP_QC_harmonised
View(outcome_MCP_QC_harmonised)
View(outcome_MDD_QC_harmonised)
View(outcome_MCP_QC)
View(exposure_CD40)
View(outcome_MDD)
View(outcome_MCP)
View(outcome_MCP_QC)
View(outcome_MDD_QC)
View(exposure_sCD40_QC)
exposure_sCD40_QC <- exposure_CD40 %>%
filter(hm_rsid  %in% CD40_snps) %>%
dplyr::select(hm_rsid, hm_other_allele, hm_effect_allele, hm_effect_allele_frequency, hm_beta, standard_error, p_value, n) %>%
dplyr::rename(id = hm_rsid,
beta = hm_beta,
freq = hm_effect_allele_frequency,
pvalue = p_value,
A1 = hm_effect_allele,
A2 = hm_other_allele) %>%
mutate(varbeta = standard_error^2, zscore = beta/standard_error)
outcome_MDD_QC <- outcome_MDD %>%
filter(ID  %in% MDD_snps) %>%
dplyr::select(ID, A1, A2, freq, BETA, SE, PVAL, CHROM, POS) %>%
dplyr::rename(id = ID,
beta = BETA,
pvalue = PVAL,
chr = CHROM,
pos = POS) %>%
mutate(varbeta = SE^2, zscore = beta/SE)
View(outcome_MCP_QC)
View(outcome_MCP_QC_harmonised)
View(outcome_MDD_QC_harmonised)
View(exposure_sCD40_QC)
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
write.table(outcome_MCP_QC_harmonised, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', sep = '\t', row.names = F, quote = F)
MDD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', header = T)
## Read in harmonised summary statistics - limited to 500kb +/- CD40 transcipt region
MCP <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MCP_harmonised.tsv', header = T)
## Save harmonised sumstats
write.table(outcome_MDD_QC_harmonised, '~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', sep = '\t', row.names = F, quote = F)
outcome_MDD_QC_harmonised
MDD <- read.table('~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/MDD_harmonised.tsv', header = T)
## find duplicates in SNP list
LD_no_dup <- LD[-which(duplicated(LD_snps$V1)), -which(duplicated(LD_snps$V1))]
LD_snps_no_dup <- LD_snps$V1[-which(duplicated(LD_snps$V1))]
colnames(LD_no_dup) <- LD_snps_no_dup
rownames(LD_no_dup) <- LD_snps_no_dup
## Get LD matrices for each GWAS
LD_MCP <- LD_no_dup[colnames(LD_no_dup) %in% MCP$id,]
LD_MCP <- LD_MCP[,colnames(LD_no_dup) %in% MCP$id]
LD_MDD <- LD_no_dup[colnames(LD_no_dup) %in% MDD$id,]
LD_MDD <- LD_MDD[,colnames(LD_no_dup) %in% MDD$id]
LD_CD40 <- LD_no_dup[colnames(LD_no_dup) %in% CD40$id,]
LD_CD40 <- LD_CD40[,colnames(LD_no_dup) %in% CD40$id]
## Plot CD40 region
CD40_small <- CD40[CD40$id %in% colnames(LD_CD40),]
assoc_plot((CD40_small %>% dplyr::select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker="rs6074022")
MDD_small <- MDD[MDD$id %in% colnames(LD_MDD),]
assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MDD)
MCP_small <- MCP[MCP$id %in% colnames(LD_MCP),]
assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% rename(marker = id, z = zscore)), corr = LD_MCP)
## get MAF
CD40_small$freq <- as.numeric(CD40_small$freq)
CD40_small$MAF <- ifelse(CD40_small$freq > 0.5, 1-CD40_small$freq, CD40_small$freq)
MDD_small$freq <- as.numeric(MDD_small$freq)
MDD_small$MAF <- ifelse(MDD_small$freq > 0.5, 1-MDD_small$freq, MDD_small$freq)
MCP_small$freq <- as.numeric(MCP_small$freq)
MCP_small$MAF <- ifelse(MCP_small$freq > 0.5, 1-MCP_small$freq, MCP_small$freq)
## remove rows with NA
CD40_small <- na.omit(CD40_small)
MDD_small <- na.omit(MDD_small)
MCP_small <- na.omit(MCP_small)
## make list
exposure_list <- list("pvalues" = CD40_small$pvalue, "beta" = CD40_small$beta, "varbeta" = CD40_small$varbeta, "N" = 21758, "type" = "quant", "MAF" = CD40_small$MAF, "LD" = as.matrix(LD_CD40), "snp" = CD40_small$id, "position" = CD40_small$pos, "sdY" = 1)
outcome_MDD_list <- list("pvalues" = MDD_small$pvalue, "beta" = MDD_small$beta, "varbeta" = MDD_small$varbeta, "N" = 3583863, "type" = "quant", "MAF" = MDD_small$MAF, "LD" = as.matrix(LD_MDD), "snp" = MDD_small$id, "position" = MDD_small$pos, "sdY" = 1)
outcome_MCP_list <- list("pvalues" = MCP_small$pvalue, "beta" = MCP_small$beta, "varbeta" = MCP_small$varbeta, "N" = 440780, "type" = "quant", "MAF" = MCP_small$MAF, "LD" = as.matrix(LD_MCP), "snp" = MCP_small$id, "position" = MCP_small$pos, "sdY" = 1)
str(exposure_list)
str(outcome_MDD_list)
str(outcome_MCP_list)
check_dataset(exposure_list)
check_dataset(outcome_MDD_list)
check_dataset(outcome_MCP_list)
plot_dataset(exposure_list)
plot_dataset(outcome_MDD_list)
plot_dataset(outcome_MCP_list)
## standard coloc (single causal variant)
my.res <- coloc.abf(dataset1=exposure_list, dataset2=outcome_MDD_list)
sensitivity(my.res,"H4 > 0.9")
my.res <- coloc.abf(dataset1=exposure_list, dataset2=outcome_MCP_list)
sensitivity(my.res,"H4 > 0.9")
## finemap
finemap.signals(exposure_list,method="cond")
finemap.signals(outcome_MDD_list,method="cond")
finemap.signals(outcome_MCP_list,method="cond")
check_dataset(exposure_list,req="LD")
check_dataset(outcome_MDD_list,req="LD")
check_dataset(outcome_MCP_list,req="LD")
S_outcome_MDD_list <- runsusie(outcome_MDD_list, n = 3583863, max_causal = 10, max_iter = 1000)
summary(S_outcome_MDD_list)
S_outcome_MCP_list <- runsusie(outcome_MCP_list, n = 440780, max_causal = 10, max_iter = 1000)
summary(S_outcome_MCP_list)
S_exposure_list <- runsusie(exposure_list, n = 21758, max_causal = 10, max_iter = 1000)
summary(S_exposure_list)
## Save susie output
save(S_outcome_MDD_list, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MDD_list.Rdata")
save(S_outcome_MCP_list, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MCP_list.Rdata")
save(S_exposure_list,file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_exposure_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MDD_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_outcome_MCP_list.Rdata")
# load("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/resources/S_exposure_list.Rdata")
## Colocalise CD40 and MCP
res_susie_CD40_MCP <- if(requireNamespace("susieR",quietly=TRUE)) {
susie_MCP_res=coloc.susie(S_outcome_MCP_list,S_exposure_list)
print(susie_MCP_res$summary)
}
for (i in 1:nrow(susie_MCP_res$summary)){
if(requireNamespace("susieR",quietly=TRUE)) {
sensitivity(susie_MCP_res,"H4 > 0.9",row=i,dataset1=outcome_MCP_list,dataset2=exposure_list)
}
}
## Colocalise CD40 and MDD
res_susie_CD40_MDD <- if(requireNamespace("susieR",quietly=TRUE)) {
susie_MDD_res=coloc.susie(S_outcome_MDD_list,S_exposure_list)
print(susie_MDD_res$summary)
}
## Sensitivity analysis
for (i in 1:nrow(susie_MDD_res$summary)){
if(requireNamespace("susieR",quietly=TRUE)) {
sensitivity(susie_MDD_res,"H4 > 0.9",row=i,dataset1=outcome_MDD_list,dataset2=exposure_list)
}
}
## Plot colocalised SNPs
for(i in 1:nrow(susie_MDD_res$summary)){
snp1 <- susie_MDD_res$summary$hit1[i]
snp2 <- susie_MDD_res$summary$hit2[i]
p1 <- as.ggplot(assoc_plot((MDD_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_MDD, top.marker=snp1))
p2 <- as.ggplot(assoc_plot((CD40_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker=snp2))
assign(paste0("CD40_MDD_", i), p1/p2)
}
for(i in 1:nrow(susie_MCP_res$summary)){
snp1 <- susie_MCP_res$summary$hit1[i]
snp2 <- susie_MCP_res$summary$hit2[i]
p1 <- as.ggplot(assoc_plot((MCP_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_MCP, top.marker=snp1))
p2 <- as.ggplot(assoc_plot((CD40_small %>% select(id, chr, pos, zscore) %>% dplyr::rename(marker = id, z = zscore)), corr = LD_CD40, top.marker=snp2))
assign(paste0("CD40_MCP_", i), p1/p2)
}
## Save results
save(susie_MDD_res, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MDD_res.Rdata")
write.csv(susie_MDD_res$summary, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MDD_res.csv")
save(susie_MCP_res, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MCP_res.Rdata")
write.csv(susie_MCP_res$summary, file = "~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/susie_MCP_res.csv")
plots <- ls(patter = "CD40_MDD_|CD40_MCP_")
for (i in plots){
png(paste0("~/Desktop/PhD/projects/CP_MDD_inflammation_MR/output/colocalization/locuszoom/",i, ".jpg"), height = 1000)
print(get(i))
dev.off()
}
## plot LD matrix between causal SNPs
corrplot::corrplot(as.matrix(LD_MCP[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]))
LD_CD40[unique(susie_MCP_res$summary$hit1), unique(susie_MCP_res$summary$hit1)]
View(CD40_MCP_2)
CD40_MCP_2\
CD40_MCP_2
CD40_MCDD_2
CD40_MDD_2
